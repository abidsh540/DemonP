# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Jun 18 04:11:42 2025
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))